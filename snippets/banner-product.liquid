{% comment %}
  Universal product banner
  Usage:
    {% render 'banner-product', handle: 'nike-air-max-plus' %}
    or (inside loops)
    {% render 'banner-product', product: product %}
{% endcomment %}

{%- assign current_product = product | default: null -%}
{%- if current_product == null and handle -%}
  {%- assign current_product = all_products[handle] -%}
{%- endif -%}

{%- if current_product == null -%}
  <div class="bp bp--error" style="padding:1rem;border:1px dashed #ddd;border-radius:.75rem">
    {{ 'products.banner.missing_product' | t | default: 'Failed to load product: please pass product or handle.' }}
  </div>
{%- else -%}

{%- assign featured_image = current_product.featured_image -%}
{%- assign title_safe = current_product.title | escape -%}

{%- assign color_index = 0 -%}
{%- assign size_index  = 0 -%}
{%- for opt in current_product.options_with_values -%}
  {%- assign n = opt.name | downcase -%}
  {%- if n == 'color' or n == 'colour' or n == 'цвет' or n == 'kolor' -%}
    {%- assign color_index = forloop.index -%}
  {%- elsif n == 'size' or n == 'rozmiar' or n == 'размер' -%}
    {%- assign size_index = forloop.index -%}
  {%- endif -%}
{%- endfor -%}
{%- if color_index == 0 and current_product.options.size > 0 -%}{%- assign color_index = 1 -%}{%- endif -%}

{%- if color_index == 0 -%}
  <div class="bp">
    <div class="bp__head"><strong>{{ title_safe }}</strong></div>
    <div class="bp__body" style="margin-top:.5rem">
      {{ 'products.banner.no_color_option' | t | default: 'No Color option found for this product. Palette not shown.' }}
    </div>
  </div>
{%- else -%}

{%- case color_index -%}
  {%- when 1 -%}{%- assign colors_all = current_product.variants | map: 'option1' -%}
  {%- when 2 -%}{%- assign colors_all = current_product.variants | map: 'option2' -%}
  {%- when 3 -%}{%- assign colors_all = current_product.variants | map: 'option3' -%}
{%- endcase -%}
{%- assign colors_uniq = colors_all | uniq -%}

{%- assign main_variant = current_product.selected_or_first_available_variant | default: current_product.variants.first -%}

{%- capture price_block -%}
  {%- if main_variant and main_variant.price -%}
    <div class="bp__price">
      {%- if main_variant.compare_at_price and main_variant.compare_at_price > main_variant.price -%}
        <span class="bp__price--new">{{ main_variant.price | money_without_trailing_zeros }}</span>
        <s class="bp__price--old" aria-label="{{ 'products.banner.old_price' | t | default: 'Old price' }}">{{ main_variant.compare_at_price | money_without_trailing_zeros }}</s>
      {%- else -%}
        <span class="bp__price--regular">{{ main_variant.price | money_without_trailing_zeros }}</span>
      {%- endif -%}
    </div>
  {%- endif -%}
{%- endcapture -%}

{%- assign variants = current_product.variants -%}

<div class="bp" data-product-id="{{ current_product.id }}">
  <!-- LEFT: vertical gallery -->
  <div class="bp__gallery" aria-label="product gallery">
    <div class="bp__gallery-track">
      {%- if featured_image -%}
        <button type="button" class="bp__gthumb is-active" data-image="{{ featured_image | image_url: width: 1600 }}">
          {{ featured_image | image_url: width: 180 | image_tag: loading: 'lazy', alt: title_safe }}
        </button>
      {%- endif -%}
      {%- for m in current_product.media limit: 4 -%}
        {%- if m.preview_image.src != featured_image.src -%}
          <button type="button" class="bp__gthumb" data-image="{{ m.preview_image | image_url: width: 1600 }}">
            {{ m.preview_image | image_url: width: 180 | image_tag: loading: 'lazy', alt: m.alt | default: title_safe }}
          </button>
        {%- endif -%}
      {%- endfor -%}
    </div>
  </div>

  <!-- CENTER: hero image -->
  <div class="bp__hero">
    {%- if featured_image -%}
      {{ featured_image | image_url: width: 1600 | image_tag: class: 'bp__hero-img', loading: 'lazy', alt: featured_image.alt | default: title_safe }}
    {%- else -%}
      {{ 'image' | placeholder_svg_tag: 'bp__placeholder' }}
    {%- endif -%}
  </div>

  <!-- RIGHT: content -->
  <div class="bp__content">
    <h3 class="bp__title">{{ title_safe }}</h3>
    {{- price_block -}}

    <!-- COLOR THUMBS -->
    <div class="bp__colors">
      <div class="bp__label">{{ 'products.banner.select_color' | t | default: 'Select color' }}</div>
      <div class="bp__swatches" role="list">
        {%- assign printed = 0 -%}
        {%- for color in colors_uniq -%}
          {%- if color == blank -%}{%- continue -%}{%- endif -%}

          {%- case color_index -%}
            {%- when 1 -%}{%- assign color_variants = variants | where: 'option1', color -%}
            {%- when 2 -%}{%- assign color_variants = variants | where: 'option2', color -%}
            {%- when 3 -%}{%- assign color_variants = variants | where: 'option3', color -%}
          {%- endcase -%}
          {%- assign v = color_variants.first -%}
          {%- if v == null -%}{%- continue -%}{%- endif -%}

          {%- comment -%} hero для цвета {%- endcomment -%}
          {%- assign hero_image = v.image | default: featured_image -%}

          {%- comment -%} собрать галерею для цвета: media, назначенные вариантам этого цвета; fallback — картинки вариантов {%- endcomment -%}
          {%- assign variant_ids = color_variants | map: 'id' -%}
          {%- assign gallery_large = '' -%}
          {%- assign gallery_small = '' -%}
          {%- assign added = '' -%}

          {%- for m in current_product.media -%}
            {%- if m.assigned_variant_ids and m.assigned_variant_ids.size > 0 -%}
              {%- assign hit = false -%}
              {%- for vid in m.assigned_variant_ids -%}
                {%- if variant_ids contains vid -%}{%- assign hit = true -%}{%- break -%}{%- endif -%}
              {%- endfor -%}
              {%- if hit -%}
                {%- assign big = m.preview_image | image_url: width: 1600 -%}
                {%- assign sm  = m.preview_image | image_url: width: 180 -%}
                {%- unless added contains big -%}
                  {%- assign added = added | append: big | append: '|' -%}
                  {%- assign gallery_large = gallery_large | append: big | append: ',' -%}
                  {%- assign gallery_small = gallery_small | append: sm  | append: ',' -%}
                {%- endunless -%}
              {%- endif -%}
            {%- endif -%}
          {%- endfor -%}

          {%- if gallery_large == '' -%}
            {%- for vv in color_variants -%}
              {%- if vv.image -%}
                {%- assign big = vv.image | image_url: width: 1600 -%}
                {%- assign sm  = vv.image | image_url: width: 180  -%}
                {%- unless added contains big -%}
                  {%- assign added = added | append: big | append: '|' -%}
                  {%- assign gallery_large = gallery_large | append: big | append: ',' -%}
                  {%- assign gallery_small = gallery_small | append: sm  | append: ',' -%}
                {%- endunless -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endif -%}

          {%- assign gallery_large = gallery_large | split: ',' | uniq | compact -%}
          {%- assign gallery_small = gallery_small | split: ',' | uniq | compact -%}

          {%- comment -%} Размеры по цвету {%- endcomment -%}
          {%- capture sizes_json -%}
            [
            {%- if size_index > 0 -%}
              {%- for vv in color_variants -%}
                {%- case size_index -%}
                  {%- when 1 -%}{%- assign size_label = vv.option1 -%}
                  {%- when 2 -%}{%- assign size_label = vv.option2 -%}
                  {%- when 3 -%}{%- assign size_label = vv.option3 -%}
                {%- endcase -%}
                {
                  "id": {{ vv.id }},
                  "label": {{ size_label | json }},
                  "qty": {{ vv.inventory_quantity | default: 0 }},
                  "available": {{ vv.available | json }},
                  "invTracked": {% if vv.inventory_management %}true{% else %}false{% endif %},
                  "image": {{ vv.image | default: hero_image | image_url: width: 1600 | json }}
                }{%- if forloop.last == false -%},{%- endif -%}
              {%- endfor -%}
            {%- endif -%}
            ]
          {%- endcapture -%}

          <button
            type="button"
            role="listitem"
            class="bp__swatch bp__swatch--thumb"
            data-variant-id="{{ v.id }}"
            data-hero="{{ hero_image | image_url: width: 1600 }}"
            data-gallery-large='{{ gallery_large | json }}'
            data-gallery-small='{{ gallery_small | json }}'
            data-sizes='{{ sizes_json | strip | escape }}'
            aria-label="{{ color | escape }}"
            title="{{ color | escape }}"
          >
            {%- assign preview = hero_image | image_url: width: 180 -%}
            <img src="{{ preview }}" width="90" height="90" alt="{{ color | escape }}" loading="lazy" />
            <span class="bp__swatch-label">{{ color | escape }}</span>
          </button>

          {%- assign printed = printed | plus: 1 -%}
          {%- if printed >= 3 -%}{%- break -%}{%- endif -%}
        {%- endfor -%}
      </div>
    </div>

    <!-- SIZES -->
    <div class="bp__sizes" data-sizes hidden>
      <div class="bp__label">{{ 'products.banner.select_size' | t | default: 'Select size' }}</div>
      <div class="bp__sizes-list"></div>
    </div>

    <!-- STOCK LINE -->
    <div class="bp__stock" data-stock>{{ 'products.banner.select_color' | t | default: 'Select color' }}</div>

    <!-- CTA -->
    {%- if main_variant -%}
      <div class="bp__cta">
        <a href="{{ routes.cart_add_url }}?id={{ main_variant.id }}&quantity=1" class="bp__add">
          {{ 'products.banner.add_to_bag' | t | default: 'Add to bag' }}
        </a>
      </div>
    {%- endif -%}
  </div>
</div>

<style>
/* Layout: gallery | hero | content */
.bp{display:grid;grid-template-columns:120px 1fr 420px;gap:28px;align-items:start;border:1px solid #eee;border-radius:16px;padding:20px;background:#fff}
@media (max-width: 1100px){.bp{grid-template-columns:100px 1fr;grid-template-areas:"g h" "g c";}.bp__content{grid-column:1/-1}}
.bp__title{margin:0 0 6px;font-size:32px;line-height:1.2;font-weight:700}
.bp__price{display:flex;gap:8px;align-items:baseline;margin:8px 0 14px}
.bp__price--new,.bp__price--regular{font-weight:700;font-size:20px}
.bp__price--old{opacity:.6}

/* Left gallery */
.bp__gallery{width:120px}
.bp__gallery-track{display:flex;flex-direction:column;gap:12px;max-height:560px;overflow:auto;padding-right:6px}
.bp__gthumb{display:block;border:1px solid #e6e6e6;border-radius:12px;padding:4px;background:#fff;cursor:pointer}
.bp__gthumb img{display:block;border-radius:10px}
.bp__gthumb.is-active{box-shadow:0 0 0 2px #111 inset}

/* Hero */
.bp__hero{background:#f7f7f7;border-radius:16px;display:flex;align-items:center;justify-content:center;min-height:420px}
.bp__hero-img{display:block;width:100%;height:auto;border-radius:16px}

/* Labels, swatches, sizes */
.bp__label{font-size:14px;margin:10px 0 8px;color:#666}
.bp__swatches{display:flex;gap:12px;flex-wrap:wrap}
.bp__swatch{position:relative;cursor:pointer;transition:box-shadow .15s;border:1px solid #ddd;border-radius:12px;padding:6px;background:#fff}
.bp__swatch img{display:block;width:88px;height:88px;object-fit:cover;border-radius:10px}
.bp__swatch.is-active{box-shadow:0 0 0 2px #111 inset}
.bp__swatch-label{position:absolute;left:-9999px}

.bp__sizes{margin-top:10px}
.bp__sizes-list{display:flex;gap:10px;flex-wrap:wrap}
.bp__size{min-width:120px;padding:.7rem .9rem;border:1px solid #ddd;border-radius:12px;background:#fff;cursor:pointer}
.bp__size.is-active{border-color:#111;box-shadow:0 0 0 2px #111 inset}
.bp__size.is-disabled{opacity:.45;cursor:not-allowed}

.bp__stock{font-size:14px;color:#333;margin-top:8px;min-height:20px}
.bp__cta{margin-top:14px}
.bp__add{display:flex;align-items:center;justify-content:center;background:#111;color:#fff;border-radius:12px;padding:1rem 1.2rem;text-decoration:none;font-weight:700}
</style>

<script>
(function(){
  var root = document.currentScript.closest('.bp');
  if(!root) return;

  var heroImg   = root.querySelector('.bp__hero-img');
  var gallery   = root.querySelector('.bp__gallery-track');
  var stockEl   = root.querySelector('[data-stock]');
  var swatches  = root.querySelectorAll('.bp__swatch');
  var addBtn    = root.querySelector('.bp__add');
  var sizesWrap = root.querySelector('[data-sizes]');
  var sizesList = root.querySelector('.bp__sizes-list');

  function setActive(list, btn){
    list.forEach(function(b){ b.classList.remove('is-active'); });
    btn.classList.add('is-active');
  }

  function updateStock(qty, available, invTracked){
    var notAvailableText   = {{ "products.banner.not_available"        | t | default: "Not available" | json }};
    var availableWithCount = {{ "products.banner.available_with_count" | t | default: "Available: __count__" | json }};
    var availableGeneric   = {{ "products.banner.available"            | t | default: "Available" | json }};
    var text = '';
    if(invTracked){
      if(isNaN(qty) || qty <= 0){ text = notAvailableText; }
      else { text = availableWithCount.replace('__count__', qty); }
    } else {
      text = (available === true || available === 'true') ? availableGeneric : notAvailableText;
    }
    stockEl.textContent = text;
  }

  function bindThumbs(){
    var thumbs = root.querySelectorAll('.bp__gthumb');
    thumbs.forEach(function(t){
      t.addEventListener('click', function(){
        setActive(thumbs, t);
        var src = t.getAttribute('data-image');
        if(heroImg && src){ heroImg.src = src; }
      });
    });
  }

  function renderGallery(largeList, smallList, hero){
    gallery.innerHTML = '';
    var arrLarge = [];
    try { arrLarge = JSON.parse(largeList || '[]'); } catch(e){ arrLarge = []; }
    var arrSmall = [];
    try { arrSmall = JSON.parse(smallList || '[]'); } catch(e){ arrSmall = []; }

    // Вставляем hero первым
    if(hero){
      var h = document.createElement('button');
      h.type='button'; h.className='bp__gthumb is-active';
      h.dataset.image = hero;
      h.innerHTML = '<img src="'+(arrSmall[0] || hero)+'" alt="">';
      gallery.appendChild(h);
    }

    (arrLarge || []).slice(0,4).forEach(function(url, i){
      if(!url || url === hero) return;
      var b = document.createElement('button');
      b.type='button'; b.className='bp__gthumb';
      b.dataset.image = url;
      var thumb = (arrSmall && arrSmall[i]) ? arrSmall[i] : url;
      b.innerHTML = '<img src="'+thumb+'" alt="">';
      gallery.appendChild(b);
    });

    bindThumbs();
  }

  function renderSizes(btn){
    var sizes = [];
    try { sizes = JSON.parse(btn.dataset.sizes || '[]'); } catch(e){ sizes = []; }
    sizesList.innerHTML = '';
    sizesWrap.hidden = (sizes.length === 0);

    if(sizes.length === 0){
      // если нет размеров — делаем кнопку «в корзину» для varianta цвета
      if(addBtn && btn.dataset.variantId){
        addBtn.href = '{{ routes.cart_add_url }}?id=' + btn.dataset.variantId + '&quantity=1';
      }
      stockEl.textContent = {{ "products.banner.available" | t | default: "Available" | json }};
      return;
    }

    sizes.forEach(function(s, idx){
      var b = document.createElement('button');
      b.type='button';
      b.className='bp__size';
      b.textContent = s.label;
      b.dataset.variantId = s.id;
      b.dataset.qty = String(s.qty || 0);
      b.dataset.available = String(s.available);
      b.dataset.invTracked = String(!!s.invTracked);
      b.dataset.image = s.image || '';

      var disabled = (s.invTracked && (!s.qty || s.qty <= 0)) || (!s.invTracked && s.available === false);
      if(disabled){ b.disabled = true; b.classList.add('is-disabled'); }

      b.addEventListener('click', function(){
        setActive(sizesList.querySelectorAll('.bp__size'), b);
        updateStock(parseInt(b.dataset.qty,10), (b.dataset.available === 'true'), (b.dataset.invTracked === 'true'));
        if(heroImg && b.dataset.image){ heroImg.src = b.dataset.image; }
        if(addBtn){ addBtn.href = '{{ routes.cart_add_url }}?id=' + b.dataset.variantId + '&quantity=1'; }
      });

      sizesList.appendChild(b);

      // автоселект первого доступного
      if(idx === 0 && !disabled){
        b.click();
      }
    });
  }

  // Клик по цвету
  swatches.forEach(function(btn){
    btn.addEventListener('click', function(){
      setActive(swatches, btn);

      var hero = btn.getAttribute('data-hero');
      if(heroImg && hero){ heroImg.src = hero; }

      // заменить левую галерею на цветовую
      renderGallery(btn.dataset.galleryLarge, btn.dataset.gallerySmall, hero);

      // размеры
      renderSizes(btn);
    });
  });

  // привязать клики к стартовой галерее
  bindThumbs();

  // авто-выбрать первый цвет
  if(swatches[0]){ swatches[0].click(); }
})();
</script>

{%- endif -%}
{%- endif -%}
